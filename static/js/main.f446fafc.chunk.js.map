{"version":3,"sources":["components/StoryForm/Text/textStory.module.css","components/StoryForm/Image/imageStory.module.css","components/StoryViewer/Text/textStory.module.css","components/StoryViewer/Image/imageStoryViewer.module.css","constants/index.ts","components/StoryForm/Text/TextStory.tsx","components/StoryForm/Image/ImageStory.tsx","utils/index.ts","components/StoryViewer/Image/ImageStoryViewer.tsx","components/StoryViewer/Text/TextStoryViewer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","BACKGROUND_LIST","TextStory","useState","text","setText","background","setBackground","className","classes","root","aside","textarea","onChange","e","target","value","rows","backgroundList","map","color","onClick","style","cursor","outline","data","type","localStorage","setItem","JSON","stringify","main","ImageStory","props","image","setImage","isSubmitted","setIsSubmitted","useFabricJSEditor","editor","onReady","canvas","add","fabric","Textbox","fill","fontSize","fontFamily","fontWeight","textAlign","name","renderAll","error","console","log","activeObject","getActiveObject","set","i","Math","floor","random","getRandomColor","objects","toJSON","imageForm","startsWith","Image","fromURL","img","canvasWidth","getWidth","canvasHeight","getHeight","setWidth","setHeight","obj","getObjects","forEach","o","scaleToHeight","centerObject","ImageStoryViewer","useEffect","loadFromJSON","bind","display","TextStoryViewer","App","storyType","setStoryType","setData","storyView","json","getItem","parse","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f446fafc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"textStory_root__Ofb2A\",\"main\":\"textStory_main__3Z8bC\",\"textarea\":\"textStory_textarea__25mrj\",\"backgroundList\":\"textStory_backgroundList__1YQld\",\"text\":\"textStory_text__3rfR_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"imageStory_root__1OtGI\",\"main\":\"imageStory_main__D1hUV\",\"canvas\":\"imageStory_canvas__mmpxt\",\"imageForm\":\"imageStory_imageForm__1DxPd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"textStory_root__37umn\",\"text\":\"textStory_text__2P-7A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"imageStoryViewer_canvas__3uFWQ\"};","export const BACKGROUND_LIST = [\n    'linear-gradient(138deg, rgba(168,74,217,1) 0%, rgba(202,88,186,1) 55%, rgba(229,83,128,1) 100%)',\n    'linear-gradient(138deg, rgba(55,31,68,1) 0%, rgba(115,88,202,1) 55%, rgba(97,0,30,1) 100%)',\n    'linear-gradient(138deg, rgba(31,68,64,1) 0%, rgba(202,88,155,1) 55%, rgba(90,97,0,1) 100%)',\n    'linear-gradient(138deg, rgba(14,33,240,1) 0%, rgba(88,202,197,1) 55%, rgba(11,97,38,1) 100%)',\n    'radial-gradient(circle, rgba(238,174,202,1) 0%, rgba(148,187,233,1) 100%)',\n    'linear-gradient(138deg, rgba(14,33,240,1) 0%, rgba(88,202,197,1) 55%, rgba(11,97,38,1) 100%)',\n    'radial-gradient(circle, rgba(198,76,129,1) 12%, rgba(218,177,209,1) 27%, rgba(148,187,233,1) 100%',\n    'linear-gradient(180deg, rgba(62,66,105,1) 0%, rgba(233,225,107,1) 55%, rgba(11,97,38,1) 100%)',\n    'radial-gradient(circle, rgba(117,67,81,1) 2%, rgba(107,233,164,1) 37%, rgba(97,11,11,1) 100%)',\n    '#2d88ff',\n    '#ececec',\n    '#6344ed',\n    '#8bd9ff',\n    'linear-gradient(315deg, rgba(255,184,0,1) 0%, rgba(237,68,77,0.7175245098039216) 61%, rgba(232,68,237,1) 78%)',\n];\n","import { ChangeEvent, useState } from \"react\";\n\nimport { BACKGROUND_LIST } from \"../../../constants\";\n\nimport classes from \"./textStory.module.css\";\n\nconst TextStory = () => {\n    const [text, setText] = useState(\"\");\n    const [background, setBackground] = useState(\"#000\");\n\n    const onChangeText = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        const text = e.target.value;\n        setText(text);\n    };\n\n    const saveToServer = () => {\n        const data = {\n            type: \"text\",\n            background,\n            text,\n        };\n        localStorage.setItem(\"data\", JSON.stringify(data));\n    };\n\n    return (\n        <div className={classes.root}>\n            <aside className={classes.aside}>\n                <textarea\n                    className={classes.textarea}\n                    onChange={onChangeText}\n                    rows={7}\n                />\n                <p>Change color</p>\n                <ul className={classes.backgroundList}>\n                    {BACKGROUND_LIST.map((color) => {\n                        return (\n                            <li\n                                onClick={() => setBackground(color)}\n                                style={{\n                                    background: color,\n                                    cursor: \"pointer\",\n                                    outline: `${\n                                        color === background\n                                            ? \"2px solid blue\"\n                                            : \"\"\n                                    } `,\n                                }}\n                            ></li>\n                        );\n                    })}\n                </ul>\n                <button onClick={saveToServer}>Save</button>\n            </aside>\n            <div\n                className={classes.main}\n                style={{\n                    background: background,\n                }}\n            >\n                <p className={classes.text}>{text}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default TextStory;\n","import React, { ChangeEvent, useState } from \"react\";\nimport { fabric } from \"fabric\";\nimport { FabricJSCanvas, useFabricJSEditor } from \"fabricjs-react\";\n\nimport classes from \"./imageStory.module.css\";\nimport { getRandomColor } from \"../../../utils\";\n\ninterface Props {}\n\nconst ImageStory = (props: Props) => {\n    const [image, setImage] = useState<string | null>(null);\n    const [isSubmitted, setIsSubmitted] = useState<boolean>(false);\n\n    const { editor, onReady } = useFabricJSEditor();\n\n    const deleteSelections = () => {\n        editor?.canvas.getActiveObjects().forEach((object) => {\n            editor?.canvas.remove(object);\n        });\n    };\n\n    const changeTextColor = () => {\n        const activeObject = editor?.canvas.getActiveObject();\n        if (activeObject?.type === \"textbox\") {\n            activeObject.set(\"fill\", getRandomColor());\n            editor?.canvas.renderAll();\n        }\n    };\n\n    const onAddText = () => {\n        try {\n            editor?.canvas.add(\n                new fabric.Textbox(\"Type something...\", {\n                    fill: \"red\",\n                    fontSize: 20,\n                    fontFamily: \"Arial\",\n                    fontWeight: \"bold\",\n                    textAlign: \"center\",\n                    name: \"my-text\",\n                })\n            );\n            editor?.canvas.renderAll();\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        console.log(e);\n        const { value } = e.target;\n        setImage(value);\n    };\n\n    const submitImage = () => {\n        if (image && image.startsWith(\"http\")) {\n            fabric.Image.fromURL(image, function (img) {\n                const canvasWidth = editor?.canvas.getWidth();\n                const canvasHeight = editor?.canvas.getHeight();\n                editor?.canvas.setWidth(500);\n                editor?.canvas.setHeight(500);\n                editor?.canvas.add(img);\n                const obj = editor?.canvas.getObjects();\n                obj?.forEach((o) => {\n                    if (o.type === \"image\") {\n                        o.scaleToHeight(canvasWidth || 100);\n                        o.scaleToHeight(canvasHeight || 100);\n                    }\n                });\n\n                editor?.canvas.centerObject(img);\n                setIsSubmitted(true);\n            });\n        }\n    };\n\n    const saveToServer = () => {\n        const objects = editor?.canvas.toJSON();\n        if (objects) {\n            localStorage.setItem(\"data\", JSON.stringify(objects));\n        }\n    };\n\n    return (\n        <div className={classes.root}>\n            {isSubmitted && (\n                <aside className={classes.aside}>\n                    <button onClick={onAddText}>Add Text</button>\n                    <button onClick={changeTextColor}>Change Text Color</button>\n                    <button onClick={saveToServer}>Save</button>\n                </aside>\n            )}\n\n            <div className={classes.main}>\n                {!isSubmitted && (\n                    <div className={classes.imageForm}>\n                        <input type=\"text\" onChange={onChange} />\n                        <button onClick={submitImage}>Submit</button>\n                    </div>\n                )}\n                <FabricJSCanvas className={classes.canvas} onReady={onReady} />\n            </div>\n        </div>\n    );\n};\n\nexport default ImageStory;\n","export const getRandomColor = () => {\n    const letters = \"0123456789ABCDEF\";\n    let color = \"#\";\n    for (let i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n};\n","import React, { useEffect } from \"react\";\nimport { FabricJSCanvas, useFabricJSEditor } from \"fabricjs-react\";\n\nimport classes from \"./imageStoryViewer.module.css\";\n\ninterface Props {\n    data: any | null;\n}\n\nconst ImageStoryViewer = ({ data }: Props) => {\n    const { editor, onReady } = useFabricJSEditor();\n\n    useEffect(() => {\n        console.log(`data`, data);\n        if (data && editor) {\n            editor.canvas.loadFromJSON(\n                data,\n                editor.canvas.renderAll.bind(editor.canvas)\n            );\n        }\n    }, [editor, data]);\n\n    return (\n        <div\n            style={{\n                display: data ? \"block\" : \"none\",\n            }}\n        >\n            <FabricJSCanvas className={classes.canvas} onReady={onReady} />\n        </div>\n    );\n};\n\nexport default ImageStoryViewer;\n","import classes from \"./textStory.module.css\";\n\ninterface Props {\n    data: any;\n}\n\nconst TextStoryViewer = ({ data }: Props) => {\n    const { background, text } = data;\n    return (\n        <div\n            className={classes.root}\n            style={{\n                background: `${background}`,\n            }}\n        >\n            <div className={classes.text}>{text}</div>\n        </div>\n    );\n};\n\nexport default TextStoryViewer;\n","import React, { ChangeEvent, useState } from \"react\";\n\nimport TextStory from \"./components/StoryForm/Text\";\nimport ImageStory from \"./components/StoryForm/Image\";\nimport ImageStoryViewer from \"./components/StoryViewer/Image\";\nimport TextStoryViewer from \"./components/StoryViewer/Text\";\n\nimport \"./App.css\";\n\nconst App = () => {\n    const [storyType, setStoryType] = useState<string | null>(null);\n    const [data, setData] = useState<any>(null);\n\n    const showResultFromServer = () => {\n        const json = localStorage.getItem(\"data\");\n        if (json) {\n            const objects = JSON.parse(json);\n            console.log(`objects`, objects);\n            setData(objects);\n        }\n    };\n\n    const reset = () => {\n        setStoryType(null);\n        setData(null);\n        localStorage.setItem(\"data\", \"\");\n    };\n\n    const storyView =\n        data &&\n        ((!data.type && <ImageStoryViewer data={data} />) ||\n            (data?.type === \"image\" && <TextStoryViewer data={data} />));\n\n    return (\n        <div className=\"root\">\n            <button onClick={showResultFromServer}>\n                Show result from server\n            </button>\n            <button onClick={reset}>Reset</button>\n            {!storyType && (\n                <React.Fragment>\n                    <button onClick={() => setStoryType(\"text\")}>\n                        Text story\n                    </button>\n                    <button onClick={() => setStoryType(\"image\")}>\n                        {\" \"}\n                        Image story{\" \"}\n                    </button>\n                </React.Fragment>\n            )}\n            <div className=\"main\">\n                {(storyType === \"text\" && <TextStory />) ||\n                    (storyType === \"image\" && <ImageStory />)}\n                {storyView}\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}